// Generated by view binder compiler. Do not edit!
package com.example.icooking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.icooking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecipeDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnRecipeDialogNo;

  @NonNull
  public final Button btnRecipeDialogYes;

  @NonNull
  public final TextView tvRecipeDialogMessage;

  @NonNull
  public final TextView tvRecipeDialogTitle;

  private RecipeDialogBinding(@NonNull LinearLayout rootView, @NonNull Button btnRecipeDialogNo,
      @NonNull Button btnRecipeDialogYes, @NonNull TextView tvRecipeDialogMessage,
      @NonNull TextView tvRecipeDialogTitle) {
    this.rootView = rootView;
    this.btnRecipeDialogNo = btnRecipeDialogNo;
    this.btnRecipeDialogYes = btnRecipeDialogYes;
    this.tvRecipeDialogMessage = tvRecipeDialogMessage;
    this.tvRecipeDialogTitle = tvRecipeDialogTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecipeDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecipeDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recipe_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecipeDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_recipe_dialog_no;
      Button btnRecipeDialogNo = rootView.findViewById(id);
      if (btnRecipeDialogNo == null) {
        break missingId;
      }

      id = R.id.btn_recipe_dialog_yes;
      Button btnRecipeDialogYes = rootView.findViewById(id);
      if (btnRecipeDialogYes == null) {
        break missingId;
      }

      id = R.id.tv_recipe_dialog_message;
      TextView tvRecipeDialogMessage = rootView.findViewById(id);
      if (tvRecipeDialogMessage == null) {
        break missingId;
      }

      id = R.id.tv_recipe_dialog_title;
      TextView tvRecipeDialogTitle = rootView.findViewById(id);
      if (tvRecipeDialogTitle == null) {
        break missingId;
      }

      return new RecipeDialogBinding((LinearLayout) rootView, btnRecipeDialogNo, btnRecipeDialogYes,
          tvRecipeDialogMessage, tvRecipeDialogTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
